// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  id_role    Int      @db.Integer
  username   String   @unique @db.VarChar(255)
  password   String   @db.VarChar(255)
  name       String   @db.VarChar(255)
  phone      String   @db.VarChar(255)
  address    String   @db.Text
  status     Boolean  @default(false)
  created_at DateTime @default(now()) @db.Timestamptz()
  updated_at DateTime @updatedAt @db.Timestamptz()
  role       Role     @relation(fields: [id_role], references: [id])

  @@map("users")
}

model Role {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamptz()
  updated_at DateTime @updatedAt @db.Timestamptz()
  User       User[]

  @@map("roles")
}

model Car {
  id              Int      @id @default(autoincrement())
  id_car_brand    Int      @db.Integer
  name            String   @db.VarChar(255)
  production_year String   @db.VarChar(255)
  type            String   @db.VarChar(255)
  created_at      DateTime @default(now()) @db.Timestamptz()
  updated_at      DateTime @updatedAt @db.Timestamptz()
  carBrand        CarBrand @relation(fields: [id_car_brand], references: [id])

  @@map("cars")
}

model CarBrand {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  manufacture String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamptz()
  updated_at  DateTime @updatedAt @db.Timestamptz()
  Car         Car[]

  @@map("car_brands")
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  description String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamptz()
  updated_at  DateTime @updatedAt @db.Timestamptz()

  @@map("categories")
}

model File {
  id         Int      @id @default(autoincrement())
  file_id    Int      @db.Integer
  file_model String   @db.VarChar(255)
  name       String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamptz()
  updated_at DateTime @updatedAt @db.Timestamptz()

  @@map("files")
}